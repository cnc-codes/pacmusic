name: Deploy Staging 

on:
  push:
    branches:
      - main

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: Staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Staging (Debug with .env)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          script: |
            set -x  # Enable command echoing for debugging

            APP_STG_PATH=${{ vars.APP_STG_PATH }}
            GIT_URL=${{ secrets.GIT_URL }}

            echo "üìÅ Go to repository or clone if not exists"
            if [[ -d "$APP_STG_PATH/pacmusic/.git" ]]; then
              cd $APP_STG_PATH/pacmusic
              git pull --rebase
            else
              rm -rf $APP_STG_PATH/pacmusic
              git clone $GIT_URL $APP_STG_PATH/pacmusic
              cd $APP_STG_PATH/pacmusic
            fi

            echo "üìÑ Create/overwrite .env for Staging"
            echo "APP_STG_PORT_1=${{ vars.APP_STG_PORT_1 }}" > .env
            echo "APP_STG_PORT_2=${{ vars.APP_STG_PORT_2 }}" >> .env
            echo "MINIO_ENDPOINT=${{ secrets.MINIO_STG_ENDPOINT }}" >> .env
            echo "MINIO_ACCESS_KEY=${{ secrets.MINIO_STG_ACCESS_KEY }}" >> .env
            echo "MINIO_SECRET_KEY=${{ secrets.MINIO_STG_SECRET_KEY }}" >> .env
            echo "DOMAIN=${{ vars.STG_DOMAIN }}" >> .env
            echo "EMAIL=${{ secrets.EMAIL }}" >> .env

            echo "üìÑ .env content for verification:"
            cat .env

            echo "üõë Stop old staging containers"
            sudo docker compose --profile Staging down || true

            echo "üöÄ Build and start staging containers"
            sudo docker compose --profile Staging up --build --detach

            echo "üìä List all containers"
            sudo docker compose ps

            echo "‚è≥ Wait until all staging containers are running"
            for svc in pacmusic-stg-1 pacmusic-stg-2; do
              for i in {1..20}; do
                STATUS=$(sudo docker inspect -f '{{.State.Running}}' $svc)
                if [ "$STATUS" = "true" ]; then
                  echo "‚úÖ $svc is running"
                  break
                else
                  echo "‚è≥ Waiting for $svc... ($i/20)"
                  sleep 5
                fi
              done

              echo "üìÑ Last 20 logs of $svc"
              sudo docker logs --tail 20 $svc || true
            done

      - name: Test Staging Endpoint
        run: |
          set -x
          STG_DOMAIN=https://${{ vars.STG_DOMAIN }}
          for i in {1..20}; do
            if curl -f $STG_DOMAIN >/dev/null 2>&1; then
              echo "‚úÖ Staging endpoint reachable!"
              break
            else
              echo "‚è≥ Waiting for endpoint... ($i/20)"
              sleep 10
            fi
          done
