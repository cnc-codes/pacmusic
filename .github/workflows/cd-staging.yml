---
name: Deploy Staging üöÄ
on:
  push:
    branches:
      - main
jobs:
  deploy-staging:
    name: Deploy PacMusic to Staging
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Deploy to Staging Server
        uses: appleboy/ssh-action@v1.0.3
        env:
          APP_STG_PATH: ${{ vars.APP_STG_PATH }}
          APP_STG_PORT: ${{ secrets.APP_STG_PORT }}
          MINIO_STG_ENDPOINT: ${{ secrets.MINIO_STG_ENDPOINT }}
          MINIO_STG_ACCESS_KEY: ${{ secrets.MINIO_STG_ACCESS_KEY }}
          MINIO_STG_SECRET_KEY: ${{ secrets.MINIO_STG_SECRET_KEY }}
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          envs: APP_STG_PATH, APP_STG_PORT, MINIO_STG_ENDPOINT, MINIO_STG_ACCESS_KEY,
            MINIO_STG_SECRET_KEY
          script: >
            # Clone or update repository

            if [[ -d "${APP_STG_PATH}" ]]; then
              cd $APP_STG_PATH
              sudo docker compose down
              git pull --rebase
            else
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              git clone $GIT_URL $APP_PATH_STAGING
              cd $APP_PATH_STAGING
            fi


            # Update .env file for staging

            echo "APP_PORT=$APP_STG_PORT" > .env

            echo "MINIO_ENDPOINT=$MINIO_STG_ENDPOINT" >> .env

            echo "MINIO_ACCESS_KEY=$MINIO_STG_ACCESS_KEY" >> .env

            echo "MINIO_SECRET_KEY=$MINIO_STG_SECRET_KEY" >> .env


            # Build and run container

            sudo docker compose up pacmusic-staging --build --detach


            # Wait until server is ready

            for i in {1..20}; do
              if sudo docker exec pacmusic-staging curl -f http://localhost:$APP_STG_PORT; then
                echo "‚úÖ Staging server is up!"
                break
              else
                echo "‚è≥ Waiting for server... ($i/20)"
                sleep 10
              fi
            done
      - name: Hit Staging Endpoint
        env:
          STAGING_URL: ${{ secrets.STAGING_URL }}
        run: |
          for i in {1..20}; do
            if curl -f $STAGING_URL ; then
              echo "‚úÖ Staging endpoint reachable!"
              break
            else
              echo "‚è≥ Waiting for staging endpoint... ($i/20)"
              sleep 10
            fi
          done
