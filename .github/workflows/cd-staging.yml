name: Deploy Staging üöÄ

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-staging:
    name: Deploy to staging server
    runs-on: ubuntu-latest
    environment: Staging

    steps:
      # 1Ô∏è‚É£ Execute deployment on remote server via SSH
      - name: Execute deployment command
        uses: appleboy/ssh-action@v1.0.3
        env:
          APP_STG_PORT: ${{ secrets.APP_STG_PORT }}
          GIT_URL: ${{ secrets.GIT_URL }}
          APP_PORT: ${{ secrets.APP_STG_PORT }}
          MINIO_STG_ACCESS_KEY: ${{ secrets.MINIO_STG_ACCESS_KEY }}
          MINIO_STG_SECRET_KEY: ${{ secrets.MINIO_STG_SECRET_KEY }}
          MINIO_STG_ENDPOINT: ${{ secrets.MINIO_STG_ENDPOINT }}
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          envs: APP_PATH_STAGING, GIT_URL, APP_PORT, MINIO_STG_ACCESS_KEY, MINIO_STG_SECRET_KEY, MINIO_STG_ENDPOINT
          script: |
            echo "üöÄ Starting PacMusic Staging Deployment..."

            # Create ~/.ssh if not exists
            mkdir -p ~/.ssh

            # Add GitHub to known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts

            # Clone or update repository
            if [[ -d "${APP_PATH_STAGING}/pacmusic" ]]; then
              cd $APP_PATH_STAGING/pacmusic
              docker compose down
              git pull --rebase
            else
              git clone $GIT_URL $APP_PATH_STAGING/pacmusic
              cd $APP_PATH_STAGING/pacmusic
            fi

            # Ensure docker-compose.yml exists
            if [[ ! -f "docker-compose.yml" ]]; then
              echo "‚ùå docker-compose.yml not found in $APP_PATH_STAGING/pacmusic"
              exit 1
            fi

            # Update .env file
            echo "APP_PORT=$APP_PORT" > .env
            echo "MINIO_STG_ACCESS_KEY=$MINIO_STG_ACCESS_KEY" >> .env
            echo "MINIO_STG_SECRET_KEY=$MINIO_STG_SECRET_KEY" >> .env
            echo "MINIO_STG_ENDPOINT=$MINIO_STG_ENDPOINT" >> .env

            # Build and run container
            docker compose up pacmusic-stg --build --detach

            # Wait until staging server is ready
            for i in {1..20}; do
              if docker exec pacmusic-stg curl -f http://localhost:$APP_PORT; then
                echo "‚úÖ Staging server is up!"
                break
              else
                echo "‚è≥ Waiting for staging server... ($i/20)"
                sleep 10
              fi

              if [[ $i -eq 20 ]]; then
                echo "‚ùå Staging server failed to start after 200s"
                exit 1
              fi
            done

      # 2Ô∏è‚É£ Hit staging endpoint from GitHub Actions runner
      - name: Hit Staging Endpoint
        shell: bash
        env:
          STG_URL: ${{ secrets.STG_URL }}
        run: |
          for i in {1..20}; do
            if curl -f $STG_URL; then
              echo "‚úÖ Staging endpoint reachable!"
              break
            else
              echo "‚è≥ Waiting for staging endpoint... ($i/20)"
              sleep 10
            fi

            if [[ $i -eq 20 ]]; then
              echo "‚ùå Staging endpoint not reachable after 200s"
              exit 1
            fi
          done
