name: Deploy Staging üöÄ

on:
  push:
    branches:
      - main

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: Staging

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Staging
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ secrets.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          script: |
            APP_STG_PATH=${{ vars.APP_STG_PATH }}
            APP_STG_PORT=${{ secrets.APP_STG_PORT }}

            # Go to the repository folder or clone it if it doesn't exist
            if [[ -d "$APP_STG_PATH/pacmusic/.git" ]]; then
              cd $APP_STG_PATH/pacmusic
              git pull --rebase
            else
              # Repository doesn‚Äôt exist ‚Üí clone fresh
              rm -rf $APP_STG_PATH/pacmusic
              git clone $GIT_URL $APP_STG_PATH/pacmusic
              cd $APP_STG_PATH/pacmusic
            fi

            # Create minimal .env with only APP_STG_PORT
            echo "APP_PORT=$APP_STG_PORT" > .env

            # Stop the old container if it exists
            sudo docker compose down || true

            # Build the Docker image from Dockerfile and start pacmusic-stg container
            sudo docker compose up --build --detach pacmusic-stg

            # Wait until the container is running
            for i in {1..20}; do
              STATUS=$(sudo docker inspect -f '{{.State.Running}}' pacmusic-stg)
              if [ "$STATUS" = "true" ]; then
                echo "‚úÖ Container pacmusic-stg is running"
                break
              else
                echo "‚è≥ Waiting for container... ($i/20)"
                sleep 5
              fi
            done

      - name: Test Staging Endpoint
        run: |
          STG_URL=${{ secrets.STG_URL }}
          for i in {1..20}; do
            if curl -f $STG_URL >/dev/null 2>&1; then
              echo "‚úÖ Staging endpoint reachable!"
              break
            else
              echo "‚è≥ Waiting for endpoint... ($i/20)"
              sleep 10
            fi
          done
