name: Deploy Production üöÄ

on:
  release:
    types: [published]

jobs:
  deploy-production:
    name: Deploy PacMusic to Production
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.3
        env:
          APP_PROD_PATH: ${{ vars.APP_PROD_PATH }}
          APP_PROD_PORT: ${{ secrets.APP_PROD_PORT }}
          MINIO_PROD_ENDPOINT: ${{ secrets.MINIO_PROD_ENDPOINT }}
          MINIO_PROD_ACCESS_KEY: ${{ secrets.MINIO_PROD_ACCESS_KEY }}
          MINIO_PROD_SECRET_KEY: ${{ secrets.MINIO_PROD_SECRET_KEY }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          GIT_URL: ${{ secrets.GIT_URL }}
          APP_NAME: ${{ vars.APP_NAME }}
          APP_TAG: ${{ github.event.release.tag_name }}
        with:
          host: ${{ secrets.SSH_HOST_PRODUCTION }}
          username: ${{ secrets.SSH_USER_NAME_PRODUCTION }}
          key: ${{ secrets.SSH_PRIVAT_KEY_PRODUCTION }}
          envs: APP_PROD_PATH, APP_PROD_PORT, MINIO_PROD_ENDPOINT, MINIO_PROD_ACCESS_KEY, MINIO_PROD_SECRET_KEY, DOCKERHUB_USERNAME, DOCKERHUB_TOKEN, GIT_URL, APP_NAME, APP_TAG
          script: |
            echo "üîπ Starting production deployment..."

            # Pull Docker image from Docker Hub
            echo "üê≥ Pulling Docker image: $DOCKERHUB_USERNAME/$APP_NAME:$APP_TAG"
            sudo docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
            sudo docker pull $DOCKERHUB_USERNAME/$APP_NAME:$APP_TAG

            # Clone or update repo
            if [[ -d "$APP_PROD_PATH" ]]; then
              echo "üîÑ Updating existing repository..."
              cd $APP_PROD_PATH
              sudo docker compose down
              git pull --rebase
            else
              echo "üì• Cloning repository..."
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              git clone $GIT_URL $APP_PROD_PATH
              cd $APP_PROD_PATH
            fi

            # Update .env file (without EOL)
            echo "üìù Updating .env file..."
            echo "MINIO_ENDPOINT=$MINIO_PROD_ENDPOINT" > .env
            echo "MINIO_ACCESS_KEY=$MINIO_PROD_ACCESS_KEY" >> .env
            echo "MINIO_SECRET_KEY=$MINIO_PROD_SECRET_KEY" >> .env
            echo "APP_IMAGE=${DOCKERHUB_USERNAME}/${APP_NAME}" >> .env
            echo "APP_TAG=$APP_TAG" >> .env
            echo "APP_PORT=$APP_PROD_PORT" >> .env

            # Build and run container
            echo "üê≥ Deploying production container..."
            sudo docker compose up pacmusic-prod --build --detach

            # Wait until server is ready
            echo "‚è≥ Waiting for production server to be ready..."
            for i in {1..20}; do
              if sudo docker exec pacmusic-prod curl -f http://localhost:5000 >/dev/null 2>&1; then
                echo "‚úÖ Production server is up!"
                break
              else
                echo "‚è≥ Waiting... ($i/20)"
                sleep 10
              fi
            done

      - name: Hit Production Endpoint
        env:
          PROD_URL: ${{ secrets.PROD_URL }}
        run: |
          echo "üåê Checking production endpoint..."
          for i in {1..20}; do
            if curl -f $PROD_URL >/dev/null 2>&1; then
              echo "‚úÖ Production endpoint reachable!"
              break
            else
              echo "‚è≥ Waiting for production endpoint... ($i/20)"
              sleep 10
            fi
          done
