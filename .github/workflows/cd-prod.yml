name: Deploy Production üöÄ

on:
  release:
    types: [published]

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: SSH to production server
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST_PRODUCTION }}
          username: ${{ secrets.SSH_USER_NAME_PRODUCTION }}
          key: ${{ secrets.SSH_PRIVAT_KEY_PRODUCTION }}
          script: |
            # Define variables
            APP_PROD_PATH=${{ vars.APP_PROD_PATH }}
            APP_PROD_PORT=${{ vars.APP_PROD_PORT }}
            APP_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/pacmusic
            APP_TAG=latest

            # Pull the Docker image from Docker Hub
            echo "üê≥ Pulling image: $APP_IMAGE:$APP_TAG"
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            sudo docker pull $APP_IMAGE:$APP_TAG

            # Go to repository folder or clone it if missing
            if [[ -d "$APP_PROD_PATH/pacmusic/.git" ]]; then
              cd $APP_PROD_PATH/pacmusic
              git pull --rebase
            else
              rm -rf $APP_PROD_PATH/pacmusic
              git clone $GIT_URL $APP_PROD_PATH/pacmusic
              cd $APP_PROD_PATH/pacmusic
            fi

            # Create .env with all necessary variables
            echo "APP_PROD_PORT=$APP_PROD_PORT" > .env
            echo "APP_IMAGE=$APP_IMAGE" >> .env
            echo "APP_TAG=$APP_TAG" >> .env

            # Stop old container if exists
            sudo docker compose down || true

            # Start production container using pulled image
            sudo docker compose up --build --detach pacmusic-prod

            # Wait until container is running
            for i in {1..20}; do
              STATUS=$(sudo docker inspect -f '{{.State.Running}}' pacmusic-prod)
              if [ "$STATUS" = "true" ]; then
                echo "‚úÖ Container pacmusic-prod is running"
                break
              else
                echo "‚è≥ Waiting for container... ($i/20)"
                sleep 5
              fi
            done

      # Step 3: Test production endpoint
      - name: Test Production Endpoint
        run: |
          PROD_URL=${{ secrets.PROD_URL }}
          for i in {1..20}; do
            if curl -f $PROD_URL >/dev/null 2>&1; then
              echo "‚úÖ Production endpoint reachable!"
              break
            else
              echo "‚è≥ Waiting for endpoint... ($i/20)"
              sleep 10
            fi
          done
