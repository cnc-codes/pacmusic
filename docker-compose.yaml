# # version: '3'

# services:

# # DEV
#   pacmusic-dev:
#     build:
#       context: ./app
#       dockerfile: Dockerfile
#     container_name: pacmusic-dev
#     # environment:
#     #   MINIO_ENDPOINT: ${MINIO_DEV_ENDPOINT}
#     #   MINIO_ACCESS_KEY: ${MINIO_DEV_ACCESS_KEY}
#     #   MINIO_SECRET_KEY: ${MINIO_DEV_SECRET_KEY}
#     ports:
#       - 5004:5000
#     networks:
#       - pacmusic-network

# # STG
#   pacmusic-stg:
#     build:
#       context: ./app
#       dockerfile: Dockerfile
#     image: pacmusic-stg:latest
#     container_name: pacmusic-stg
#     # environment:
#     #   MINIO_ENDPOINT: ${MINIO_STG_ENDPOINT}
#     #   MINIO_ACCESS_KEY: ${MINIO_STG_ACCESS_KEY}
#     #   MINIO_SECRET_KEY: ${MINIO_STG_SECRET_KEY}
#     ports:
#       - ${APP_STG_PORT}:5000
#     networks:
#       - pacmusic-network

# # PROD
#   pacmusic-prod:
#     image: "${APP_IMAGE}:${APP_TAG}"
#     container_name: pacmusic-prod
#     # environment:
#     #   MINIO_ENDPOINT: ${MINIO_PROD_ENDPOINT}
#     #   MINIO_ACCESS_KEY: ${MINIO_PROD_ACCESS_KEY}
#     #   MINIO_SECRET_KEY: ${MINIO_PROD_SECRET_KEY}
#     ports:
#       - ${APP_PROD_PORT}:5000
#     networks:
#       - pacmusic-network

# networks:
#   pacmusic-network:
#     driver: bridge
#     name: pacmusic-network

# # volumes:
# #   # minio-dev-vol:
# #   #   driver: local
# #   #   name: minio-dev-vol


# =============== NEW CONFIG USING DOCKERFILE ===================
# ======================= DEV CONFIG ============================
# version: '3'

services:
  pacmusic-dev:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-dev
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_DEV_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_DEV_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_DEV_SECRET_KEY}
    ports:
      - 5001:5000
    networks:
      - pacmusic-network

# ======================= STG CONFIG ==========================
  pacmusic-stg-1:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-stg-1
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_STG_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_STG_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_STG_SECRET_KEY}
    ports:
      - ${APP_STG_PORT_1}:5000
    networks:
      - pacmusic-network

  pacmusic-stg-2:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-stg-2
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_STG_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_STG_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_STG_SECRET_KEY}
    ports:
      - ${APP_STG_PORT_2}:5000
    networks:
      - pacmusic-network

# ======================= PROD CONFIG ==========================
  pacmusic-prod-1:
    image: "${APP_IMAGE}:${APP_TAG}"
    container_name: pacmusic-prod-1
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_PROD_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_PROD_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_PROD_SECRET_KEY}
    ports:
      - ${APP_PROD_PORT_1}:5000
    networks:
      - pacmusic-network

  pacmusic-prod-2:
    image: "${APP_IMAGE}:${APP_TAG}"
    container_name: pacmusic-prod-2
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_PROD_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_PROD_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_PROD_SECRET_KEY}
    ports:
      - ${APP_PROD_PORT_2}:5000
    networks:
      - pacmusic-network

# ======================= NGINX CONFIG ==========================
  pacmusic-nginx:
    image: nginx:stable
    container_name: pacmusic-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl/live:/etc/letsencrypt/live
      - ./nginx/html:/var/www/certbot
    depends_on:
      - pacmusic-stg-1
      - pacmusic-stg-2
    networks:
      - pacmusic-network

  pacmusic-certbot:
    image: certbot/certbot
    container_name: pacmusic-certbot
    volumes:
      - ./nginx/ssl/live:/etc/letsencrypt/live
      - ./nginx/html:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew; done;'"
    networks:
      - pacmusic-network

  certbot-init:
    image: certbot/certbot
    container_name: certbot-init
    volumes:
      - ./nginx/ssl/live:/etc/letsencrypt/live
      - ./nginx/html:/var/www/certbot
    command: >
      sh -c "certbot certonly --webroot -w /var/www/certbot
             -d ${STG_DOMAIN} --non-interactive --agree-tos --email ${STG_EMAIL}"
    networks:
      - pacmusic-network
      
# ======================= NETWORK CONFIG ========================
networks:
  pacmusic-network:
    driver: bridge
    name: pacmusic-network

# volumes:
#   minio-dev-vol:
#     driver: local
#     name: minio-dev-vol