# ====== docker-compose.yaml ======
services:
  pacmusic-nginx:
  # ======= Nginx ========
    container_name: pacmusic-nginx
    restart: unless-stopped
    image: nginx:stable
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - pacmusic-network
    profiles:
      - Production
      - Staging

  pacmusic-certbot:
  # ======= Certbot ========
    container_name: pacmusic-certbot
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email ${EMAIL} -d ${PROD_DOMAIN} -d ${STG_DOMAIN} --agree-tos
    depends_on:
      - pacmusic-nginx
    networks:
      - pacmusic-network
    profiles:
      - Production
      - Staging

  pacmusic-dev:
  # ======= Devopment Services ========
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-dev
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_DEV_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_DEV_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_DEV_SECRET_KEY}
    ports:
      - 5001:5000
    networks:
      - pacmusic-network
    profiles:
      - Development

  pacmusic-stg-1:
  # ======= Staging Services ========
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-stg-1
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_STG_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_STG_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_STG_SECRET_KEY}
    ports:
      - 5001:5000
    networks:
      - pacmusic-network
    profiles:
      - Staging

  pacmusic-stg-2:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-stg-2
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_STG_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_STG_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_STG_SECRET_KEY}
    ports:
      - 5002:5000
    networks:
      - pacmusic-network
    profiles:
      - Staging

  pacmusic-prod-1:
  # ======= Production Services ========

    # image: "${APP_IMAGE}:${APP_TAG}"
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-prod-1
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_PROD_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_PROD_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_PROD_SECRET_KEY}
    ports:
      - 5003:5000
    networks:
      - pacmusic-network
    profiles:
      - Production

  pacmusic-prod-2:
    # image: "${APP_IMAGE}:${APP_TAG}"
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-prod-2
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_PROD_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_PROD_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_PROD_SECRET_KEY}
    ports:
      - 5004:5000
    networks:
      - pacmusic-network
    profiles:
      - Production

networks:
# ====== Networks ========
  pacmusic-network:
    driver: bridge
