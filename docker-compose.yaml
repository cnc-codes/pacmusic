# Docker Compose file
# ======================= DEV CONFIG ============================
# version: '3'

services:

# ======================= DEV CONFIG ===========================
  pacmusic-dev:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-dev
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_DEV_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_DEV_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_DEV_SECRET_KEY}
    ports:
      - 5001:5000
    networks:
      - pacmusic-network
    profiles:
      - Development



# ======================= STG CONFIG ==========================
  pacmusic-stg-1:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-stg-1
    restart: unless-stopped
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_STG_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_STG_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_STG_SECRET_KEY}
    ports:
      - ${APP_STG_PORT_1}:5000
    networks:
      - pacmusic-network
    profiles:
      - Staging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  pacmusic-stg-2:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: pacmusic-stg-2
    restart: unless-stopped
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_STG_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_STG_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_STG_SECRET_KEY}
    ports:
      - ${APP_STG_PORT_2}:5000
    networks:
      - pacmusic-network
    profiles:
      - Staging
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3



# ======================= PROD CONFIG ===========================
  pacmusic-prod-1:
    image: "${APP_IMAGE}:${APP_TAG}"
    container_name: pacmusic-prod-1
    restart: unless-stopped
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_PROD_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_PROD_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_PROD_SECRET_KEY}
    ports:
      - ${APP_PROD_PORT_1}:5000
    networks:
      - pacmusic-network
    profiles:
      - Production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  pacmusic-prod-2:
    image: "${APP_IMAGE}:${APP_TAG}"
    container_name: pacmusic-prod-2
    restart: unless-stopped
    # environment:
    #   MINIO_ENDPOINT: ${MINIO_PROD_ENDPOINT}
    #   MINIO_ACCESS_KEY: ${MINIO_PROD_ACCESS_KEY}
    #   MINIO_SECRET_KEY: ${MINIO_PROD_SECRET_KEY}
    ports:
      - ${APP_PROD_PORT_2}:5000
    networks:
      - pacmusic-network
    profiles:
      - Production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3



# ======================= NGINX CONFIG ===========================
  pacmusic-nginx:
    image: nginx:stable
    container_name: pacmusic-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/html:/var/www/certbot:rw           # webroot for certbot http-01 challenges
      - ./nginx/ssl:/etc/letsencrypt:rw           # certs and live
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - pacmusic-stg-1
      - pacmusic-stg-2
      - pacmusic-prod-1
      - pacmusic-prod-2
    networks:
      - pacmusic-network
    profiles:
      - Production
      - Staging

  # ---------------------------
  # Certbot: run only when needed to issue/renew certs (manual/CI will exec)
  # ---------------------------
  pacmusic-certbot:
    image: certbot/certbot
    container_name: pacmusic-certbot
    restart: unless-stopped
    volumes:
      - ./nginx/html:/var/www/certbot:rw
      - ./nginx/ssl:/etc/letsencrypt:rw
      - ./nginx/ssl/lib:/var/lib/letsencrypt:rw
    networks:
      - pacmusic-network
    profiles:
      - Production
      - Staging
      
# ======================= NETWORK CONFIG ========================
networks:
  pacmusic-network:
    driver: bridge
    name: pacmusic-network

# volumes:
#   minio-dev-vol:
#     driver: local
#     name: minio-dev-vol