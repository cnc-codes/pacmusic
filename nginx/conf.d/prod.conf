# -----------------------------
# Upstream production backend servers
# -----------------------------
# Define the backend servers for production environment
# Nginx will load balance requests between these servers using 'least_conn' algorithm
upstream pacmusic_prod {
    least_conn;  # Send requests to the server with the least active connections
    server pacmusic-prod-1:5000 max_fails=3 fail_timeout=30s;  # Retry settings if server fails
    server pacmusic-prod-2:5000 max_fails=3 fail_timeout=30s;
}

# -----------------------------
# HTTP -> HTTPS redirect
# -----------------------------
# Listen on port 80 (HTTP) and redirect all traffic to HTTPS
server {
    listen 80;
    server_name pacmusic.test;  # Production domain
    return 301 https://$host$request_uri;  # Permanent redirect to HTTPS
}

# -----------------------------
# HTTPS server
# -----------------------------
# Listen on port 443 with SSL for secure connections
server {
    listen 443 ssl;  
    server_name pacmusic.test;  # Production domain

    # Path to SSL certificate and private key
    ssl_certificate /etc/letsencrypt/live/pacmusic.test/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/pacmusic.test/privkey.pem;

    # -----------------------------
    # SSL security settings
    # -----------------------------
    ssl_protocols TLSv1.2 TLSv1.3;  # Only allow secure protocols
    ssl_ciphers 'HIGH:!aNULL:!MD5:!3DES';  # Use strong ciphers
    ssl_prefer_server_ciphers on;  # Prefer server ciphers over client ciphers
    ssl_session_cache shared:SSL:10m;  # Cache SSL sessions
    ssl_session_timeout 10m;  # Session timeout duration

    # -----------------------------
    # Proxy settings
    # -----------------------------
    location / {
        proxy_pass http://pacmusic_prod;  # Forward requests to upstream production servers
        proxy_set_header Host $host;  # Preserve original Host header
        proxy_set_header X-Real-IP $remote_addr;  # Forward client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Track original IP chain
        proxy_set_header X-Forwarded-Proto $scheme;  # Pass original protocol (HTTP/HTTPS)

        # -----------------------------
        # WebSocket support
        # -----------------------------
        proxy_http_version 1.1;  
        proxy_set_header Upgrade $http_upgrade;  # Allow WebSocket upgrades
        proxy_set_header Connection "upgrade";

        # -----------------------------
        # Proxy timeouts
        # -----------------------------
        proxy_connect_timeout 60s;  # Time to wait for backend connection
        proxy_send_timeout 60s;     # Timeout for sending request to backend
        proxy_read_timeout 60s;     # Timeout for receiving response from backend
    }
}
